$date
  Tue Nov 27 13:40:30 2018
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! clk $end
$var reg 6 " opcode[5:0] $end
$var reg 6 # funct[5:0] $end
$var reg 1 $ zero $end
$var reg 1 % irwrite $end
$var reg 1 & memwrite $end
$var reg 1 ' iord $end
$var reg 1 ( pcwrite $end
$var reg 2 ) pcsrc[1:0] $end
$var reg 3 * alucontrol[2:0] $end
$var reg 2 + alusrcb[1:0] $end
$var reg 1 , alusrca $end
$var reg 1 - regwrite $end
$var reg 1 . memtoreg $end
$var reg 1 / regdst $end
$var reg 1 0 simend $end
$scope module uut $end
$var reg 1 1 clk $end
$var reg 6 2 opcode[5:0] $end
$var reg 6 3 funct[5:0] $end
$var reg 1 4 zero $end
$var reg 1 5 irwrite $end
$var reg 1 6 memwrite $end
$var reg 1 7 iord $end
$var reg 1 8 pcwrite $end
$var reg 2 9 pcsrc[1:0] $end
$var reg 3 : alucontrol[2:0] $end
$var reg 2 ; alusrcb[1:0] $end
$var reg 1 < alusrca $end
$var reg 1 = regwrite $end
$var reg 1 > memtoreg $end
$var reg 1 ? regdst $end
$comment current_state is not handled $end
$var reg 3 @ current_state_index[2:0] $end
$var reg 1 A possible_branching_in_progess $end
$upscope $end
$enddefinitions $end
#0
0!
bUUUUUU "
bUUUUUU #
U$
1%
0&
0'
1(
b00 )
b010 *
b01 +
0,
0-
0.
0/
00
01
bUUUUUU 2
bUUUUUU 3
U4
15
06
07
18
b00 9
b010 :
b01 ;
0<
0=
0>
0?
b001 @
0A
#5000000
bXXXXXX "
bXXXXXX #
X$
bXXXXXX 2
bXXXXXX 3
X4
#10000000
1!
11
#20000000
0!
01
#25000000
b000101 "
1$
b000101 2
14
#30000000
1!
11
#40000000
0!
01
#45000000
#49000000
0$
04
#50000000
1!
11
#60000000
0!
01
#65000000
#70000000
1!
11
#80000000
0!
01
#85000000
#90000000
1!
11
#100000000
0!
01
#105000000
10
#110000000
1!
11
#120000000
